x <- as.Date("2014-01-01")
x
unclass(x)
class(x)
x<- sys.time
x<- Sys.time
x
class(x)
x <- Sys.time()
x
p <- as.POSIXlt(x)
p
names(unclass(p))
p$sec
p$hour
p$mday
p$wday
p$yday
p$isdst
class(p$isdst)
? numeric
? <<-
getwd()
source('~/.active-rstudio-document')
source('C:/_R/2-R-Programming/Practice/cacheMean.R')
source('C:/_R/2-R-Programming/Practice/cacheMean.R')
x <- 1:10000
vec <- makevector(x)
vec <- makeVector(x)
vec$getmean()
mx <- mean(x)
vec$setmean(mx)
vec$getmean()
vec$getevn()
ls(vec$getevn())
parent.env(vec$getevn())
ls(parent.env(vec$getevn()))
parent.env(vec$getevn())$m
vec$set(1:200)
vec$getmean()
mx <- mean(1:200)
vec$setmean(mx)
vec$getmean()
cache <- cachemean(vec)
cachemean
cache()
cache(vec$getmean())
cache$getmean()
cache
myVector <- makeVector(1:10)
cachemean(myVector)
? matrix
ma <- matrix(1:4,2,2)
ma
ma <- matrix(1:4,2,3)
ma <- matrix(1:6,2,3)
ma
ma <- matrix(,2,3)
ma
ma <- matrix(1:6,2,3)
solve(ma)
ma <- matrix(1:9,3,3)
solve(ma)
ma
?solve
ma <- matrix(1:16,4,4)
solve(ma)
ma
?rnorm
rnorm(16)
ma <- matrix(rnorm(16),4,4)
solve(ma)
ma <- matrix(1:4,2,2)
ma
solve(ma)
source('C:/_R/2-R-Programming/ProgrammingAssignment2/cachematrix.R')
mymat <- makeCacheMatrix(ma)
cacheSolve(mymat)
reportnoofchars<- function(weburl){
con <- url(weburl)
lines <- readLines(con)
n <- 0
for(line in lines){
n <- n+1
if(n in c(10,20,30,100)){
print(nchar(line))
}
}
}
if(n == c(10,20,30,100)){
reportnoofchars<- function(weburl){
con <- url(weburl)
lines <- readLines(con)
n <- 0
for(line in lines){
n <- n+1
if(n == c(10,20,30,100)){
print(nchar(line))
}
}
}
reportnoofchars("http://biostat.jhsph.edu/~jleek/contact.html ")
q()
reportnoofchars<- function(weburl){
con <- url(weburl)
lines <- readLines(con)
n <- 0
for(line in lines){
n <- n+1
if(n == c(10,20,30,100)){
print(nchar(line))
}
}
}
reportnoofchars("http://biostat.jhsph.edu/~jleek/contact.html ")
reportnoofchars<- function(weburl){
con <- url(weburl)
lines <- readLines(con)
n <- 0
for(line in lines){
n <- n+1
if(n == 10){
print(nchar(line))
}
if(n == 20){
print(nchar(line))
}
if(n == 30){
print(nchar(line))
}
if(n == 100){
print(nchar(line))
}
}
}
reportnoofchars("http://biostat.jhsph.edu/~jleek/contact.html ")
testSubjects
library(dplyr)
?rename
mainDir <- "C:\\_R\\3 -Getting and Cleaning data\\Assignment\\UCI HAR Dataset"
testDir <- paste(mainDir ,"\\test",sep="")
trainDir <-paste(mainDir , "\\train",sep="")
activitylevels <- read.table(paste(mainDir,"\\activity_labels.txt",sep=""))
ytest<- read.table(testDir,"\\y_test.txt",sep="")
activitylevels
ytest
ytest<- read.table(testDir,"\\y_test.txt",sep="")
ytest<- read.table(testDir,"\\y_test.txt",sep="")
?read.table
ytest<- read.table(paste(testDir,"\\y_test.txt",sep=""))
ayt <- merge(activitylevels,ytest,by.x="V1",by.y="V1",all=TRUE)
names(ayt)
rename(ayt,V1="ActivityId",V2="Activity")
rename(ayt,"V1"="ActivityId","V2"="Activity")
rename(ayt,V1=ActivityId,V2=Activity)
rename(ayt,V1="ActivityId",V2="Activity")
rename(ayt,V1=ActivityId)
rename(ayt,V1="ActivityId")
colnames(ayt)
rename(ayt,ActivityId=V1,Activity=V2)
colnames(ayt)[1]<- "ActivityId"
colnames(ayt)[2]<- "Activity"
colnames(ayt)
features <- read.table(paste(mainDir,"\\features.txt",sep=""))
features
t(features)
features
colnames(features)
rename(features,id=V1,feature=V2)
colnames(features)
features <- rename(features,id=V1,feature=V2)
colnames(features)
mainDir ="C:\\_R\\3 -Getting and Cleaning data\\Assignment\\UCI HAR Dataset"
dataDir="test"
library(dplyr)
library(stringr)
test <- "test"
train <- "train"
xfile<-""
yfile<-""
subjectFile<-""
dataFolder <- paste(mainDir ,"\\",dataDir,sep="")
dataFolder
switch(dataDir,
test={
xfile<-paste(dataFolder,"\\X_test.txt",sep="")
yfile<-paste(dataFolder,"\\X_test.txt",sep="")
subjectFile <- paste(dataFolder,"\\subject_test.txt",sep="")
},
train={
xfile<-paste(dataFolder,"\\X_train",sep="")
yfile<-paste(dataFolder,"\\y_train.txt",sep="")
subjectFile <- paste(dataFolder,"\\subject_train.txt",sep="")
}
)
xfile
yfile
subjectFile
dataDir <- paste(mainDir ,"\\","test",sep="")
activitylevels <- read.table(paste(mainDir,"\\activity_labels.txt",sep=""))
activitylevels <- rename(activitylevels,ActivityId=V1,Activity=V2)
yData<- read.table(yfile)
names(yData)<- "ActivityId"
ayt <- inner_join(yData,activitylevels)
names(yData)
yData<- read.table(yfile)
?rbind
?ddply
library(dplyr)
?ddply
q()
install.packages("tidyr")
swirl()
library(swirl)
swirl()
library(lubridate)
source('C:/_R/Exploratory Data Analysis/Course Projects/1 ExData/ExData_Plotting1/plot2.R')
data <- createPlot2()
plot(data$Day,data$Global_active_power,ylab="Gloabl active power (kilowatts)",type="l")
plot(data$Day,data$Global_active_power,ylab="Gloabl active power (kilowatts)",type="n")
names(data)
with(data,plot(Day,Global_active_power,ylab="Gloabl active power (kilowatts)",type="l"))
hist(data$Day)
hist(data$Global_active_power)
with(data,plot(Day,Global_active_power,ylab="Gloabl active power (kilowatts)",type="l"))
hist(data$Global_active_power)
x <- rnowm(100)
x <- rnorm(100)
y <- rnorm(100)
plot(x,y)
plot(x,y,pch=20)
plot(data$Day,data$Global_active_power)
data[20,10]
data[1:20,10]
?gsub
source('C:/_R/Exploratory Data Analysis/Course Projects/1 ExData/ExData_Plotting1/plot2.R')
data <- createPlot2()
data[20,10]
names(data)
source('C:/_R/Exploratory Data Analysis/Course Projects/1 ExData/ExData_Plotting1/plot2.R')
data <- createPlot2()
data[20,10]
source('C:/_R/Exploratory Data Analysis/Course Projects/1 ExData/ExData_Plotting1/plot2.R')
data <- createPlot2()
data[20,10]
x < rnorm(100)
x <- rnorm(100)
y <- rnowm(100)
y <- rnorm(100)
g <- gl(2,50)
g <- gl(2,50,labels=c("Male","Female"))
plot(x,y,type="n")
y <- data$Global_active_power
x <- data$Day
plot(x,y,type="n")
y
x
names(data)
with(data,plot(Day,Global_active_power,type="l"))
l <- is.na(data$Day)
data[which(l),]
head(data)
with(data,plot(Day,Global_active_power,type="l",xlim=c("Thu","Fri","Sat")))
with(data,plot(Day,Global_active_power,type="l",xlim=c(0,3)))
with(subset(data,day=="Thu"),plot(Day,Global_active_power,type="l"))
with(subset(data,Day=="Thu"),plot(Day,Global_active_power,type="l"))
nrow(data)
l <- data$Day == "Thu"
data[which(l),]
nrow(data[which(l),])
totalThu <- nrow(data[which(l),])
totalThu
l <- data$Day == "Fri"
totalFri <- nrow(data[which(l),])
total <- totalThu + totalFri
total
class(data$Day)
names(data)
l <- is.na(data$Global_active_power)
data[which(l),]
plot(Global_active_power ~ Day,data=data)
